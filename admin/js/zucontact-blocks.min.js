var zucontact_blocks = (function (exports) {
  'use strict';

  function _defineProperty(obj, key, value) {
    if (key in obj) {
      Object.defineProperty(obj, key, {
        value: value,
        enumerable: true,
        configurable: true,
        writable: true
      });
    } else {
      obj[key] = value;
    }

    return obj;
  }

  function _extends() {
    _extends = Object.assign || function (target) {
      for (var i = 1; i < arguments.length; i++) {
        var source = arguments[i];

        for (var key in source) {
          if (Object.prototype.hasOwnProperty.call(source, key)) {
            target[key] = source[key];
          }
        }
      }

      return target;
    };

    return _extends.apply(this, arguments);
  }

  function ownKeys(object, enumerableOnly) {
    var keys = Object.keys(object);

    if (Object.getOwnPropertySymbols) {
      var symbols = Object.getOwnPropertySymbols(object);
      if (enumerableOnly) symbols = symbols.filter(function (sym) {
        return Object.getOwnPropertyDescriptor(object, sym).enumerable;
      });
      keys.push.apply(keys, symbols);
    }

    return keys;
  }

  function _objectSpread2(target) {
    for (var i = 1; i < arguments.length; i++) {
      var source = arguments[i] != null ? arguments[i] : {};

      if (i % 2) {
        ownKeys(Object(source), true).forEach(function (key) {
          _defineProperty(target, key, source[key]);
        });
      } else if (Object.getOwnPropertyDescriptors) {
        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));
      } else {
        ownKeys(Object(source)).forEach(function (key) {
          Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));
        });
      }
    }

    return target;
  }

  function _slicedToArray(arr, i) {
    return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray(arr, i) || _nonIterableRest();
  }

  function _arrayWithHoles(arr) {
    if (Array.isArray(arr)) return arr;
  }

  function _iterableToArrayLimit(arr, i) {
    if (typeof Symbol === "undefined" || !(Symbol.iterator in Object(arr))) return;
    var _arr = [];
    var _n = true;
    var _d = false;
    var _e = undefined;

    try {
      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {
        _arr.push(_s.value);

        if (i && _arr.length === i) break;
      }
    } catch (err) {
      _d = true;
      _e = err;
    } finally {
      try {
        if (!_n && _i["return"] != null) _i["return"]();
      } finally {
        if (_d) throw _e;
      }
    }

    return _arr;
  }

  function _unsupportedIterableToArray(o, minLen) {
    if (!o) return;
    if (typeof o === "string") return _arrayLikeToArray(o, minLen);
    var n = Object.prototype.toString.call(o).slice(8, -1);
    if (n === "Object" && o.constructor) n = o.constructor.name;
    if (n === "Map" || n === "Set") return Array.from(o);
    if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);
  }

  function _arrayLikeToArray(arr, len) {
    if (len == null || len > arr.length) len = arr.length;

    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];

    return arr2;
  }

  function _nonIterableRest() {
    throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.");
  }

  // WordPress dependencies
  var _lodash = lodash,
      keys = _lodash.keys,
      has = _lodash.has,
      transform = _lodash.transform;
  var _wp$components = wp.components,
      Path = _wp$components.Path,
      G = _wp$components.G,
      SVG = _wp$components.SVG; // Zukit dependencies

  var _wp$zukit$utils = wp.zukit.utils,
      getColor = _wp$zukit$utils.getColor,
      hexToRGBA = _wp$zukit$utils.hexToRGBA; // Custom foreground icon color based on the Zu Blocks branding

  var iconColor = getColor('violet');

  var form = /*#__PURE__*/React.createElement(SVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement(G, null, /*#__PURE__*/React.createElement(Path, {
    d: "M0.545,19.636 C0.847,19.636 1.091,19.881 1.091,20.182 L1.091,22.909 L3.818,22.909 C4.119,22.909 4.364,23.153 4.364,23.455 C4.364,23.756 4.119,24 3.818,24 L0.545,24 C0.244,24 -0,23.756 0,23.455 L0,20.182 C-0,19.881 0.244,19.636 0.545,19.636 L0.545,19.636 z M23.455,19.636 L23.455,19.636 C23.153,19.636 22.909,19.881 22.909,20.182 L22.909,22.909 L20.182,22.909 C19.881,22.909 19.636,23.153 19.636,23.455 C19.636,23.756 19.881,24 20.182,24 L23.455,24 C23.755,24 24,23.756 24,23.455 L24,20.182 C24,19.881 23.755,19.636 23.455,19.636 z M10.364,22.909 L7.091,22.909 C6.79,22.909 6.545,23.153 6.545,23.454 C6.545,23.756 6.79,24 7.091,24 L10.364,24 C10.664,24 10.909,23.756 10.909,23.454 C10.909,23.153 10.664,22.909 10.364,22.909 z M16.909,22.909 L13.636,22.909 C13.335,22.909 13.091,23.153 13.091,23.454 C13.091,23.756 13.335,24 13.636,24 L16.909,24 C17.209,24 17.455,23.756 17.455,23.454 C17.455,23.153 17.209,22.909 16.909,22.909 z M0.545,13.091 C0.244,13.091 0,13.335 0,13.636 L0,16.909 C0,17.21 0.244,17.455 0.545,17.455 C0.847,17.455 1.091,17.21 1.091,16.909 L1.091,13.636 C1.091,13.335 0.847,13.091 0.545,13.091 z M23.455,13.091 C23.153,13.091 22.909,13.335 22.909,13.636 L22.909,16.909 C22.909,17.21 23.153,17.455 23.455,17.455 C23.755,17.455 24,17.21 24,16.909 L24,13.636 C24,13.335 23.755,13.091 23.454,13.091 z M23.455,6.545 C23.153,6.545 22.909,6.79 22.909,7.091 L22.909,10.364 C22.909,10.665 23.153,10.909 23.455,10.909 C23.755,10.909 24,10.665 24,10.364 L24,7.091 C24,6.79 23.755,6.545 23.454,6.545 z M0.545,6.545 C0.244,6.545 0,6.79 0,7.091 L0,10.364 C0,10.665 0.244,10.909 0.545,10.909 C0.847,10.909 1.091,10.665 1.091,10.364 L1.091,7.091 C1.091,6.79 0.847,6.545 0.545,6.545 z M3.818,-0 L0.545,-0 C0.244,-0 -0,0.244 0,0.545 L0,3.818 C-0,4.119 0.244,4.364 0.545,4.364 C0.847,4.364 1.091,4.119 1.091,3.818 L1.091,1.091 L3.818,1.091 C4.119,1.091 4.364,0.847 4.364,0.545 C4.364,0.244 4.119,-0 3.818,-0 z M23.455,-0 L20.182,-0 C19.881,-0 19.636,0.244 19.636,0.545 C19.636,0.847 19.881,1.091 20.182,1.091 L22.909,1.091 L22.909,3.818 C22.909,4.119 23.153,4.364 23.455,4.364 C23.755,4.364 24,4.119 24,3.818 L24,0.545 C24,0.244 23.755,-0 23.455,-0 z M10.364,-0 L7.091,-0 C6.79,-0 6.545,0.244 6.545,0.545 C6.545,0.847 6.79,1.091 7.091,1.091 L10.364,1.091 C10.664,1.091 10.909,0.847 10.909,0.545 C10.909,0.244 10.664,-0 10.364,-0 z M16.909,-0 L13.636,-0 C13.335,-0 13.091,0.244 13.091,0.545 C13.091,0.847 13.335,1.091 13.636,1.091 L16.909,1.091 C17.209,1.091 17.455,0.847 17.455,0.545 C17.455,0.244 17.209,-0 16.909,-0 z",
    fill: hexToRGBA(iconColor, 0.3),
    id: "frame"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M21,12 L21,17 L3,17 L3,12 L21,12 z M20,13 L4,13 L4,16 L20,16 L20,13 z M3,10 L21,10 L21,11 L3,11 z M3,8 L21,8 L21,9 L3,9 z M3,6 L21,6 L21,7 L3,7 z M3,3 L15,3 L15,5 L3,5 z",
    fill: hexToRGBA(iconColor, 0.8),
    id: "form"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M13.185,18 L19.815,18 C20.469,18 21,18.448 21,19 L21,20 C21,20.552 20.469,21 19.815,21 L13.185,21 C12.531,21 12,20.552 12,20 L12,19 C12,18.448 12.531,18 13.185,18 z",
    fill: iconColor,
    id: "button"
  })));
  var field = /*#__PURE__*/React.createElement(SVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement(G, null, /*#__PURE__*/React.createElement(Path, {
    d: "M8.667,17.5 L12,17.5 L12,16.5 L8.667,16.5 z M13.667,16.5 L17,16.5 L17,17.5 L13.667,17.5 z M22,16.5 L22,21.5 L17,21.5 L17,20.5 L20.889,20.5 L20.889,17.5 L18.667,17.5 L18.667,16.5 z M7,20.5 L10.333,20.5 L10.333,21.5 L7,21.5 z M12,20.5 L15.333,20.5 L15.333,21.5 L12,21.5 z M3.111,17.5 L3.111,20.5 L5.333,20.5 L5.333,21.5 L2,21.5 L2,16.5 L7,16.5 L7,17.5 z M8.667,3.5 L12,3.5 L12,2.5 L8.667,2.5 z M13.667,2.5 L17,2.5 L17,3.5 L13.667,3.5 z M22,2.5 L22,7.5 L17,7.5 L17,6.5 L20.889,6.5 L20.889,3.5 L18.667,3.5 L18.667,2.5 z M7,6.5 L10.333,6.5 L10.333,7.5 L7,7.5 z M12,6.5 L15.333,6.5 L15.333,7.5 L12,7.5 z M7,3.5 L7,2.5 L2,2.5 L2,7.5 L5.333,7.5 L5.333,6.5 L3.111,6.5 L3.111,3.5 z",
    fill: hexToRGBA(iconColor, 0.5),
    id: "fileds"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M22,9.5 L22,14.5 L2,14.5 L2,9.5 L22,9.5 z M20.889,10.5 L3.111,10.5 L3.111,13.5 L20.889,13.5 L20.889,10.5 z",
    fill: iconColor,
    id: "selected"
  }))); // Layout icons

  var contact = /*#__PURE__*/React.createElement(SVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement(G, null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.6,0 C22.92,0 24,1.013 24,2.25 L24,21.75 C24,22.987 22.92,24 21.6,24 L2.4,24 C1.08,24 -0,22.987 0,21.75 L0,2.25 C-0,1.013 1.08,0 2.4,0 L21.6,0 z M21,3 L3,3 L3,21 L21,21 L21,3 z",
    fill: hexToRGBA(iconColor, 0.5),
    id: "frame"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M16.667,11 L7.333,11 C6.597,11 6,11.551 6,12.231 L6,17.769 C6,18.449 6.597,19 7.333,19 L16.667,19 C17.403,19 18,18.449 18,17.769 L18,12.231 C18,11.551 17.403,11 16.667,11 z M10.211,15.502 L11.279,16.364 C11.482,16.527 11.739,16.609 12,16.609 C12.261,16.609 12.518,16.527 12.721,16.364 L13.789,15.502 L13.765,15.525 L16.195,17.769 L7.805,17.769 L10.235,15.525 L10.211,15.502 z M7.333,17.334 L7.333,13.178 L9.735,15.118 L7.333,17.334 z M14.265,15.118 L16.667,13.178 L16.667,17.332 L14.265,15.118 z M16.667,12.231 L16.667,12.36 L12.283,15.901 C12.131,16.023 11.869,16.023 11.717,15.901 L7.333,12.36 L7.333,12.231 L16.667,12.231 z",
    fill: iconColor,
    id: "mail"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6,10 L18,10 L18,9 L6,9 z M6,7 L18,7 L18,8 L6,8 z M6,5 L18,5 L18,6 L6,6 z",
    fill: hexToRGBA(iconColor, 0.8),
    id: "fields"
  })));
  var booking = /*#__PURE__*/React.createElement(SVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement(G, null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.6,0 C22.92,0 24,1.013 24,2.25 L24,21.75 C24,22.987 22.92,24 21.6,24 L2.4,24 C1.08,24 -0,22.987 0,21.75 L0,2.25 C-0,1.013 1.08,0 2.4,0 L21.6,0 z M21,3 L3,3 L3,21 L21,21 L21,3 z",
    fill: hexToRGBA(iconColor, 0.5),
    id: "frame"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11,19 L18,19 L18,17 L11,17 z",
    fill: iconColor,
    id: "button"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18,13 L18,16 L6,16 L6,13 L18,13 z M17,14 L7,14 L7,15 L17,15 L17,14 z M6,11 L18,11 L18,12 L6,12 z M6,9 L18,9 L18,10 L6,10 z M6,7 L18,7 L18,8 L6,8 z M6,5 L18,5 L18,6 L6,6 z",
    fill: hexToRGBA(iconColor, 0.8),
    id: "fields"
  })));
  var subscribe = /*#__PURE__*/React.createElement(SVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement(G, null, /*#__PURE__*/React.createElement(Path, {
    d: "M21.6,0 C22.92,0 24,1.013 24,2.25 L24,21.75 C24,22.987 22.92,24 21.6,24 L2.4,24 C1.08,24 -0,22.987 0,21.75 L0,2.25 C-0,1.013 1.08,0 2.4,0 L21.6,0 z M21,3 L3,3 L3,21 L21,21 L21,3 z",
    fill: hexToRGBA(iconColor, 0.5),
    id: "frame"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M11.708,19 L7.833,14.521 L8.937,13.417 L11.708,15.583 L16.895,11 L18,12.104 z",
    fill: iconColor,
    id: "check"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6,10 L18,10 L18,9 L6,9 z M6,7 L18,7 L18,8 L6,8 z M6,5 L18,5 L18,6 L6,6 z",
    fill: hexToRGBA(iconColor, 0.8),
    id: "fields"
  }))); // Types icons

  function typeIcon(type) {
    var frameOpacity = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0.3;
    var types = {
      textarea: "M5,19 L15,19 L15,17 L5,17 z M5,13 L19,13 L19,15 L5,15 z M5,9 L19,9 L19,11 L5,11 z M5,5 L19,5 L19,7 L5,7 z",
      text: "M18.562,5 L5.438,5 C5.196,5 5,5.196 5,5.438 L5,8.062 C5,8.304 5.196,8.5 5.438,8.5 L5.875,8.5 C6.117,8.5 6.313,8.304 6.313,8.062 L7.188,6.75 L11.125,6.75 L11.125,17.25 L8.938,18.125 C8.696,18.125 8.5,18.321 8.5,18.562 C8.5,18.804 8.696,19 8.938,19 L15.062,19 C15.304,19 15.5,18.804 15.5,18.562 C15.5,18.321 15.304,18.125 15.062,18.125 L12.875,17.25 L12.875,6.75 L16.812,6.75 L17.688,8.062 C17.688,8.304 17.883,8.5 18.125,8.5 L18.562,8.5 C18.804,8.5 19,8.304 19,8.062 L19,5.438 C19,5.196 18.804,5 18.562,5 z",
      email: "M17.444,7 L6.556,7 C5.697,7 5,7.689 5,8.539 L5,15.461 C5,16.311 5.697,17 6.556,17 L17.444,17 C18.303,17 19,16.311 19,15.461 L19,8.539 C19,7.689 18.303,7 17.444,7 z M9.912,12.628 L11.158,13.705 C11.396,13.909 11.696,14.01 12,14.01 C12.304,14.01 12.604,13.908 12.842,13.705 L14.088,12.628 L14.059,12.656 L16.895,15.461 L7.105,15.461 L9.941,12.656 L9.912,12.628 z M6.556,14.917 L6.556,9.723 L9.357,12.147 L6.556,14.917 z M14.643,12.147 L17.444,9.723 L17.444,14.915 L14.643,12.147 z M17.444,8.539 L17.444,8.7 L12.33,13.126 C12.153,13.278 11.847,13.278 11.67,13.126 L6.556,8.7 L6.556,8.539 L17.444,8.539 z",
      submit: "M18,7 C18.552,7 19,7.448 19,8 L19,16 C19,16.552 18.552,17 18,17 L6,17 C5.448,17 5,16.552 5,16 L5,8 C5,7.448 5.448,7 6,7 L18,7 z M10.058,9.782 Q9.07,9.782 8.508,10.393 Q7.945,11.004 7.945,12.056 Q7.945,13.099 8.508,13.712 Q9.07,14.326 10.058,14.326 Q11.042,14.326 11.607,13.72 Q12.173,13.113 12.173,12.056 Q12.173,10.998 11.607,10.39 Q11.042,9.782 10.058,9.782 z M10.061,10.605 Q10.251,10.605 10.428,10.683 Q10.606,10.761 10.746,10.939 Q10.881,11.115 10.961,11.389 Q11.042,11.663 11.042,12.053 Q11.042,12.463 10.966,12.716 Q10.89,12.97 10.749,13.16 Q10.617,13.336 10.436,13.419 Q10.254,13.503 10.061,13.503 Q9.87,13.503 9.691,13.425 Q9.513,13.348 9.372,13.166 Q9.234,12.987 9.155,12.722 Q9.076,12.457 9.076,12.056 Q9.076,11.666 9.16,11.385 Q9.243,11.103 9.378,10.934 Q9.53,10.749 9.694,10.677 Q9.858,10.605 10.061,10.605 z M13.787,9.677 L12.762,9.677 L12.762,14.235 L13.787,14.235 L13.787,13.017 L13.945,12.803 L14.836,14.235 L16.055,14.235 L14.818,12.363 L15.97,10.945 L14.76,10.945 L13.787,12.231 L13.787,9.677 z",
      tel: "M15.267,13.4 C14.333,14.333 14.333,15.267 13.4,15.267 C12.467,15.267 11.533,14.333 10.6,13.4 C9.667,12.467 8.733,11.533 8.733,10.6 C8.733,9.667 9.667,9.667 10.6,8.733 C11.533,7.8 8.733,5 7.8,5 C6.867,5 5,7.8 5,7.8 C5,9.667 6.917,13.451 8.733,15.267 C10.549,17.082 14.333,19 16.2,19 C16.2,19 19,17.133 19,16.2 C19,15.267 16.2,12.467 15.267,13.4 z",
      url: "M10.995,13.733 C10.809,13.733 10.622,13.661 10.48,13.519 C9.148,12.187 9.148,10.02 10.48,8.688 L13.169,6 C13.814,5.355 14.672,5 15.585,5 C16.497,5 17.355,5.355 18.001,6 C19.333,7.332 19.333,9.499 18.001,10.831 L16.772,12.06 C16.487,12.345 16.026,12.345 15.742,12.06 C15.457,11.776 15.457,11.315 15.742,11.031 L16.971,9.802 C17.735,9.037 17.735,7.794 16.971,7.03 C16.601,6.66 16.108,6.456 15.585,6.456 C15.061,6.456 14.569,6.66 14.198,7.03 L11.51,9.718 C10.745,10.482 10.745,11.726 11.51,12.49 C11.794,12.774 11.794,13.235 11.51,13.519 C11.368,13.661 11.181,13.733 10.995,13.733 z M8.415,19 C9.328,19 10.186,18.645 10.831,18 L13.52,15.311 C14.852,13.98 14.852,11.812 13.52,10.481 C13.235,10.196 12.775,10.196 12.49,10.481 C12.206,10.765 12.206,11.226 12.49,11.51 C13.255,12.274 13.255,13.518 12.49,14.282 L9.802,16.97 C9.431,17.34 8.939,17.544 8.415,17.544 C7.892,17.544 7.399,17.34 7.029,16.97 C6.265,16.206 6.265,14.962 7.029,14.198 L8.258,12.969 C8.543,12.685 8.542,12.224 8.258,11.94 C7.974,11.655 7.513,11.655 7.228,11.94 L5.999,13.169 C4.667,14.501 4.667,16.668 5.999,18 C6.645,18.645 7.503,19 8.415,19 z",
      checkbox: "M17.25,5 L6.75,5 C5.787,5 5,5.787 5,6.75 L5,17.25 C5,18.212 5.787,19 6.75,19 L17.25,19 C18.212,19 19,18.212 19,17.25 L19,6.75 C19,5.787 18.212,5 17.25,5 z M11.125,15.862 L7.881,12.619 L9.119,11.381 L11.125,13.388 L15.319,9.194 L16.556,10.431 L11.125,15.862 z",
      number: "M19,11.631 Q19,12.466 18.806,13.16 Q18.613,13.854 18.205,14.351 Q17.783,14.856 17.157,15.127 Q16.531,15.397 15.621,15.397 Q15.314,15.397 14.98,15.357 Q14.646,15.318 14.536,15.287 L14.536,14 L14.663,14 Q14.786,14.061 15.013,14.131 Q15.239,14.202 15.639,14.202 Q15.959,14.202 16.258,14.116 Q16.557,14.03 16.772,13.846 Q16.996,13.652 17.146,13.362 Q17.295,13.072 17.348,12.637 Q16.996,12.857 16.695,12.973 Q16.394,13.09 15.946,13.09 Q15.608,13.09 15.298,13 Q14.988,12.91 14.734,12.721 Q14.395,12.457 14.198,12.042 Q14,11.626 14,10.967 Q14,10.458 14.173,10.025 Q14.347,9.592 14.668,9.271 Q14.984,8.955 15.445,8.774 Q15.907,8.594 16.473,8.594 Q17.045,8.594 17.488,8.755 Q17.932,8.915 18.248,9.245 Q18.618,9.618 18.809,10.207 Q19,10.796 19,11.631 z M17.374,11.385 Q17.374,10.853 17.284,10.508 Q17.194,10.163 17.031,9.97 Q16.917,9.829 16.774,9.768 Q16.632,9.706 16.465,9.706 Q16.32,9.706 16.181,9.765 Q16.043,9.825 15.915,9.97 Q15.801,10.097 15.722,10.343 Q15.643,10.589 15.643,10.884 Q15.643,11.2 15.724,11.405 Q15.806,11.609 15.946,11.732 Q16.087,11.851 16.267,11.899 Q16.447,11.947 16.667,11.947 Q16.851,11.947 17.047,11.897 Q17.242,11.846 17.361,11.793 Q17.361,11.745 17.368,11.655 Q17.374,11.565 17.374,11.385 z M13.514,11.756 L10.601,11.756 L10.601,12.978 L13.514,12.978 z M8.397,11.996 Q8.397,13.2 8.195,13.698 Q7.993,14.197 7.523,14.197 Q7.052,14.197 6.85,13.698 Q6.648,13.2 6.648,12.004 Q6.648,10.783 6.85,10.293 Q7.052,9.803 7.523,9.803 Q7.997,9.803 8.197,10.293 Q8.397,10.783 8.397,11.996 z M10.045,11.996 Q10.045,11.174 9.911,10.541 Q9.777,9.908 9.478,9.478 Q9.175,9.038 8.703,8.816 Q8.23,8.594 7.523,8.594 Q6.855,8.594 6.371,8.807 Q5.888,9.021 5.58,9.456 Q5.268,9.899 5.134,10.515 Q5,11.13 5,12 Q5,12.844 5.136,13.474 Q5.273,14.105 5.571,14.536 Q5.875,14.971 6.354,15.188 Q6.833,15.406 7.523,15.406 Q8.217,15.406 8.696,15.188 Q9.175,14.971 9.474,14.544 Q9.773,14.118 9.909,13.481 Q10.045,12.844 10.045,11.996 z"
    };
    if (type === null) return keys(types);
    if (!has(types, type)) return null;
    var adminBlueColor = getColor('wp_admin_blue');
    return /*#__PURE__*/React.createElement(SVG, {
      width: "24",
      height: "24",
      viewBox: "0 0 24 24",
      xmlns: "http://www.w3.org/2000/svg"
    }, /*#__PURE__*/React.createElement(G, null, /*#__PURE__*/React.createElement(Path, {
      d: "M21,0 L3,0 C1.35,0 0,1.35 0,3 L0,21 C0,22.65 1.35,24 3,24 L21,24 C22.65,24 24,22.65 24,21 L24,3 C24,1.35 22.65,0 21,0 z M22,22 L2,22 L2,2 L22,2 L22,22 z",
      fill: hexToRGBA(adminBlueColor, frameOpacity),
      id: "frame"
    }), /*#__PURE__*/React.createElement(Path, {
      d: types[type],
      fill: "currentColor",
      id: type
    })));
  }

  var types = transform(typeIcon(null), function (values, type) {
    values[type] = typeIcon(type);
  }); // Block icons

  var placeholder = /*#__PURE__*/React.createElement(SVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement(G, null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5,23 L19.5,23 C19.224,23 19,22.776 19,22.5 C19,22.224 19.224,22 19.5,22 L22,22 L22,19.5 C22,19.224 22.224,19 22.5,19 C22.775,19 23,19.224 23,19.5 L23,22.5 C23,22.776 22.775,23 22.5,23 z M22.5,17 C22.224,17 22,16.776 22,16.5 L22,13.5 C22,13.224 22.224,13 22.5,13 C22.775,13 23,13.224 23,13.5 L23,16.5 C23,16.776 22.775,17 22.5,17 z M22.5,11 C22.224,11 22,10.776 22,10.5 L22,7.5 C22,7.224 22.224,7 22.5,7 C22.775,7 23,7.224 23,7.5 L23,10.5 C23,10.776 22.775,11 22.5,11 z M22.5,5 C22.224,5 22,4.776 22,4.5 L22,2 L19.5,2 C19.224,2 19,1.776 19,1.5 C19,1.224 19.224,1 19.5,1 L22.5,1 C22.775,1 23,1.224 23,1.5 L23,4.5 C23,4.776 22.775,5 22.5,5 z M16.5,23 L13.5,23 C13.224,23 13,22.776 13,22.5 C13,22.224 13.224,22 13.5,22 L16.5,22 C16.775,22 17,22.224 17,22.5 C17,22.776 16.775,23 16.5,23 z M16.5,2 L13.5,2 C13.224,2 13,1.776 13,1.5 C13,1.224 13.224,1 13.5,1 L16.5,1 C16.775,1 17,1.224 17,1.5 C17,1.776 16.775,2 16.5,2 z M10.5,2 L7.5,2 C7.224,2 7,1.776 7,1.5 C7,1.224 7.224,1 7.5,1 L10.5,1 C10.775,1 11,1.224 11,1.5 C11,1.776 10.775,2 10.5,2 z M4.5,23 L1.5,23 C1.224,23 1,22.776 1,22.5 L1,19.5 C1,19.224 1.224,19 1.5,19 C1.776,19 2,19.224 2,19.5 L2,22 L4.5,22 C4.776,22 5,22.224 5,22.5 C5,22.776 4.776,23 4.5,23 z M4.5,2 L2,2 L2,4.5 C2,4.776 1.776,5 1.5,5 C1.224,5 1,4.776 1,4.5 L1,1.5 C1,1.224 1.224,1 1.5,1 L4.5,1 C4.776,1 5,1.224 5,1.5 C5,1.776 4.776,2 4.5,2 z M1.5,7 C1.776,7 2,7.224 2,7.5 L2,10.5 C2,10.776 1.776,11 1.5,11 C1.224,11 1,10.776 1,10.5 L1,7.5 C1,7.224 1.224,7 1.5,7 z M1.5,13 C1.776,13 2,13.224 2,13.5 L2,16.5 C2,16.776 1.776,17 1.5,17 C1.224,17 1,16.776 1,16.5 L1,13.5 C1,13.224 1.224,13 1.5,13 z M7.5,22 L10.5,22 C10.775,22 11,22.224 11,22.5 C11,22.776 10.775,23 10.5,23 L7.5,23 C7.224,23 7,22.776 7,22.5 C7,22.224 7.224,22 7.5,22 z",
    fill: "currentColor",
    id: "frame",
    opacity: "0.5"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M6.195,14.431 Q5.793,13.717 5.325,13.021 Q4.857,12.325 4.329,11.707 L4.329,14.431 L3.405,14.431 L3.405,10.273 L4.167,10.273 Q4.365,10.471 4.605,10.759 Q4.845,11.047 5.094,11.374 Q5.343,11.701 5.589,12.052 Q5.835,12.403 6.051,12.727 L6.051,10.273 L6.981,10.273 L6.981,14.431 z M9.603,11.215 Q9.639,11.305 9.699,11.461 Q9.759,11.617 9.84,11.821 Q9.921,12.025 10.011,12.271 Q10.101,12.517 10.197,12.787 L9.015,12.787 Q9.111,12.517 9.204,12.271 Q9.297,12.025 9.375,11.821 Q9.453,11.617 9.513,11.461 Q9.573,11.305 9.603,11.215 z M11.727,14.431 Q11.493,13.759 11.283,13.189 Q11.073,12.619 10.872,12.115 Q10.671,11.611 10.473,11.158 Q10.275,10.705 10.071,10.273 L9.177,10.273 Q8.967,10.705 8.772,11.158 Q8.577,11.611 8.376,12.115 Q8.175,12.619 7.965,13.189 Q7.755,13.759 7.521,14.431 L8.493,14.431 Q8.559,14.215 8.64,13.987 Q8.721,13.759 8.799,13.531 L10.419,13.531 Q10.497,13.759 10.578,13.987 Q10.659,14.215 10.725,14.431 z M12.477,10.273 Q12.417,10.687 12.366,11.2 Q12.315,11.713 12.276,12.268 Q12.237,12.823 12.204,13.381 Q12.171,13.939 12.147,14.431 L13.059,14.431 Q13.077,13.825 13.107,13.111 Q13.137,12.397 13.197,11.671 Q13.305,11.923 13.437,12.229 Q13.569,12.535 13.698,12.841 Q13.827,13.147 13.947,13.426 Q14.067,13.705 14.151,13.903 L14.805,13.903 Q14.889,13.705 15.009,13.426 Q15.129,13.147 15.258,12.841 Q15.387,12.535 15.519,12.229 Q15.651,11.923 15.759,11.671 Q15.819,12.397 15.849,13.111 Q15.879,13.825 15.897,14.431 L16.809,14.431 Q16.785,13.939 16.752,13.381 Q16.719,12.823 16.68,12.268 Q16.641,11.713 16.59,11.2 Q16.539,10.687 16.479,10.273 L15.627,10.273 Q15.519,10.471 15.378,10.762 Q15.237,11.053 15.084,11.392 Q14.931,11.731 14.781,12.085 Q14.631,12.439 14.499,12.751 Q14.367,12.439 14.217,12.085 Q14.067,11.731 13.914,11.392 Q13.761,11.053 13.62,10.762 Q13.479,10.471 13.371,10.273 z M20.595,14.431 L20.595,13.645 L18.585,13.645 L18.585,12.643 L20.247,12.643 L20.247,11.875 L18.585,11.875 L18.585,11.059 L20.457,11.059 L20.457,10.273 L17.649,10.273 L17.649,14.431 z",
    fill: "currentColor",
    id: "name"
  })));
  var required = /*#__PURE__*/React.createElement(SVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement(G, null, /*#__PURE__*/React.createElement(Path, {
    d: "M12,2.993 L21.219,21.367 L2.781,21.367 L11.999,2.993 z M12,1 C11.526,1 11.052,1.32 10.692,1.959 L1.301,20.674 C0.582,21.953 1.194,23 2.661,23 L21.338,23 C22.805,23 23.417,21.954 22.698,20.674 L22.698,20.674 L13.307,1.959 C12.947,1.32 12.473,1 11.999,1 L11.999,1 z",
    fill: "currentColor",
    id: "frame"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M10.5,20 L13.5,20 L13.5,17 L10.5,17 z M10.5,9 L13.5,9 L13.5,16 L10.5,16 z",
    fill: "currentColor",
    id: "sign",
    opacity: "0.6"
  }))); // <Path d="M13.375,18.875 C13.375,19.635 12.76,20.25 12,20.25 C11.24,20.25 10.625,19.635 10.625,18.875 C10.625,18.115 11.24,17.5 12,17.5 C12.76,17.5 13.375,18.115 13.375,18.875 z M12,16.125 C12.76,16.125 13.375,15.51 13.375,14.75 L13.375,10.625 C13.375,9.865 12.76,9.25 12,9.25 C11.24,9.25 10.625,9.865 10.625,10.625 L10.625,14.75 C10.625,15.51 11.24,16.125 12,16.125 z" fill="currentColor" id="sign" opacity="0.7"/>
  var submit = /*#__PURE__*/React.createElement(SVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement(G, null, /*#__PURE__*/React.createElement(Path, {
    d: "M20.25,2.625 L9,13.875 L3.75,8.625 L0,12.375 L9,21.375 L24,6.375 z",
    fill: "currentColor"
  })));
  var remove = /*#__PURE__*/React.createElement(SVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement(G, null, /*#__PURE__*/React.createElement(Path, {
    d: "M4.438,7.875 L4.438,21.625 C4.438,22.381 5.056,23 5.812,23 L18.188,23 C18.944,23 19.562,22.381 19.562,21.625 L19.562,7.875 L4.438,7.875 z M8.562,20.25 L7.188,20.25 L7.188,10.625 L8.562,10.625 L8.562,20.25 z M11.312,20.25 L9.938,20.25 L9.938,10.625 L11.312,10.625 L11.312,20.25 z M14.062,20.25 L12.688,20.25 L12.688,10.625 L14.062,10.625 L14.062,20.25 z M16.812,20.25 L15.438,20.25 L15.438,10.625 L16.812,10.625 L16.812,20.25 z M14.062,3.75 L14.062,2.392 L9.938,2.392 L9.938,3.75 L14.062,3.75 z M19.906,3.75 C20.473,3.75 20.938,4.214 20.938,4.781 L20.938,6.5 L3.062,6.5 L3.062,4.781 C3.062,4.214 3.527,3.75 4.094,3.75 L8.562,3.75 L8.562,2.031 C8.562,1.464 9.027,1 9.594,1 L14.406,1 C14.973,1 15.438,1.464 15.438,2.031 L15.438,3.75 L19.906,3.75 z",
    fill: "currentColor",
    id: "bin"
  })));
  var append = /*#__PURE__*/React.createElement(SVG, {
    width: "24",
    height: "24",
    viewBox: "0 0 24 24",
    xmlns: "http://www.w3.org/2000/svg"
  }, /*#__PURE__*/React.createElement(G, null, /*#__PURE__*/React.createElement(Path, {
    d: "M22.5,23 L19.5,23 C19.224,23 19,22.776 19,22.5 C19,22.224 19.224,22 19.5,22 L22,22 L22,19.5 C22,19.224 22.224,19 22.5,19 C22.775,19 23,19.224 23,19.5 L23,22.5 C23,22.776 22.775,23 22.5,23 z M22.5,17 C22.224,17 22,16.776 22,16.5 L22,13.5 C22,13.224 22.224,13 22.5,13 C22.775,13 23,13.224 23,13.5 L23,16.5 C23,16.776 22.775,17 22.5,17 z M22.5,11 C22.224,11 22,10.776 22,10.5 L22,7.5 C22,7.224 22.224,7 22.5,7 C22.775,7 23,7.224 23,7.5 L23,10.5 C23,10.776 22.775,11 22.5,11 z M22.5,5 C22.224,5 22,4.776 22,4.5 L22,2 L19.5,2 C19.224,2 19,1.776 19,1.5 C19,1.224 19.224,1 19.5,1 L22.5,1 C22.775,1 23,1.224 23,1.5 L23,4.5 C23,4.776 22.775,5 22.5,5 z M16.5,23 L13.5,23 C13.224,23 13,22.776 13,22.5 C13,22.224 13.224,22 13.5,22 L16.5,22 C16.775,22 17,22.224 17,22.5 C17,22.776 16.775,23 16.5,23 z M16.5,2 L13.5,2 C13.224,2 13,1.776 13,1.5 C13,1.224 13.224,1 13.5,1 L16.5,1 C16.775,1 17,1.224 17,1.5 C17,1.776 16.775,2 16.5,2 z M10.5,2 L7.5,2 C7.224,2 7,1.776 7,1.5 C7,1.224 7.224,1 7.5,1 L10.5,1 C10.775,1 11,1.224 11,1.5 C11,1.776 10.775,2 10.5,2 z M4.5,23 L1.5,23 C1.224,23 1,22.776 1,22.5 L1,19.5 C1,19.224 1.224,19 1.5,19 C1.776,19 2,19.224 2,19.5 L2,22 L4.5,22 C4.776,22 5,22.224 5,22.5 C5,22.776 4.776,23 4.5,23 z M4.5,2 L2,2 L2,4.5 C2,4.776 1.776,5 1.5,5 C1.224,5 1,4.776 1,4.5 L1,1.5 C1,1.224 1.224,1 1.5,1 L4.5,1 C4.776,1 5,1.224 5,1.5 C5,1.776 4.776,2 4.5,2 z M1.5,7 C1.776,7 2,7.224 2,7.5 L2,10.5 C2,10.776 1.776,11 1.5,11 C1.224,11 1,10.776 1,10.5 L1,7.5 C1,7.224 1.224,7 1.5,7 z M1.5,13 C1.776,13 2,13.224 2,13.5 L2,16.5 C2,16.776 1.776,17 1.5,17 C1.224,17 1,16.776 1,16.5 L1,13.5 C1,13.224 1.224,13 1.5,13 z M7.5,22 L10.5,22 C10.775,22 11,22.224 11,22.5 C11,22.776 10.775,23 10.5,23 L7.5,23 C7.224,23 7,22.776 7,22.5 C7,22.224 7.224,22 7.5,22 z",
    fill: "currentColor",
    id: "frame",
    opacity: "0.5"
  }), /*#__PURE__*/React.createElement(Path, {
    d: "M18.562,10.25 L13.75,10.25 L13.75,5.438 C13.75,5.196 13.554,5 13.312,5 L10.688,5 C10.446,5 10.25,5.196 10.25,5.438 L10.25,10.25 L5.438,10.25 C5.196,10.25 5,10.446 5,10.688 L5,13.312 C5,13.554 5.196,13.75 5.438,13.75 L10.25,13.75 L10.25,18.562 C10.25,18.804 10.446,19 10.688,19 L13.312,19 C13.554,19 13.75,18.804 13.75,18.562 L13.75,13.75 L18.562,13.75 C18.804,13.75 19,13.554 19,13.312 L19,10.688 C19,10.446 18.804,10.25 18.562,10.25 z",
    fill: "currentColor",
    id: "plus"
  })));
  // <SVG
  // 	width="18"
  // 	height="18"
  // 	viewBox="0 0 18 18"
  // 	xmlns="http://www.w3.org/2000/svg"
  // >
  // 	<Path d="M5 8.70002L10.6 14.4L12 12.9L7.8 8.70002L12 4.50002L10.6 3.00002L5 8.70002Z" />
  // </SVG>
  // );
  //
  // export const rightArrow = (
  // <SVG
  // 	width="18"
  // 	height="18"
  // 	viewBox="0 0 18 18"
  // 	xmlns="http://www.w3.org/2000/svg"
  // >
  // 	<Path d="M13 8.7L7.4 3L6 4.5L10.2 8.7L6 12.9L7.4 14.4L13 8.7Z" />
  // </SVG>
  // );
  //
  // export const link = (
  // 	<SVG xmlns="http://www.w3.org/2000/svg" viewBox="-2 -2 24 24">
  // 		<Path d="M17.74 2.76c1.68 1.69 1.68 4.41 0 6.1l-1.53 1.52c-1.12 1.12-2.7 1.47-4.14 1.09l2.62-2.61.76-.77.76-.76c.84-.84.84-2.2 0-3.04-.84-.85-2.2-.85-3.04 0l-.77.76-3.38 3.38c-.37-1.44-.02-3.02 1.1-4.14l1.52-1.53c1.69-1.68 4.42-1.68 6.1 0zM8.59 13.43l5.34-5.34c.42-.42.42-1.1 0-1.52-.44-.43-1.13-.39-1.53 0l-5.33 5.34c-.42.42-.42 1.1 0 1.52.44.43 1.13.39 1.52 0zm-.76 2.29l4.14-4.15c.38 1.44.03 3.02-1.09 4.14l-1.52 1.53c-1.69 1.68-4.41 1.68-6.1 0-1.68-1.68-1.68-4.42 0-6.1l1.53-1.52c1.12-1.12 2.7-1.47 4.14-1.1l-4.14 4.15c-.85.84-.85 2.2 0 3.05.84.84 2.2.84 3.04 0z" />
  // 	</SVG>
  // );
  //
  // export const media = (
  // 	<SVG viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
  // 		<Path d="m19 5v14h-14v-14h14m0-2h-14c-1.1 0-2 0.9-2 2v14c0 1.1 0.9 2 2 2h14c1.1 0 2-0.9 2-2v-14c0-1.1-0.9-2-2-2z" />
  // 		<Path d="m14.14 11.86l-3 3.87-2.14-2.59-3 3.86h12l-3.86-5.14z" />
  // 	</SVG>
  // );
  //
  // export const genericGallery = (
  // 	<SVG viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
  // 		<Path d="M20 4v12H8V4h12m0-2H8c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h12c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm-8.5 9.67l1.69 2.26 2.48-3.1L19 15H9zM2 6v14c0 1.1.9 2 2 2h14v-2H4V6H2z" />
  // 	</SVG>
  // );
  //
  // export const linkOff = (
  // 	<SVG xmlns="http://www.w3.org/2000/svg" viewBox="-2 -2 24 24">
  // 		<Path d="M17.74 2.26c1.68 1.69 1.68 4.41 0 6.1l-1.53 1.52c-.32.33-.69.58-1.08.77L13 10l1.69-1.64.76-.77.76-.76c.84-.84.84-2.2 0-3.04-.84-.85-2.2-.85-3.04 0l-.77.76-.76.76L10 7l-.65-2.14c.19-.38.44-.75.77-1.07l1.52-1.53c1.69-1.68 4.42-1.68 6.1 0zM2 4l8 6-6-8zm4-2l4 8-2-8H6zM2 6l8 4-8-2V6zm7.36 7.69L10 13l.74 2.35-1.38 1.39c-1.69 1.68-4.41 1.68-6.1 0-1.68-1.68-1.68-4.42 0-6.1l1.39-1.38L7 10l-.69.64-1.52 1.53c-.85.84-.85 2.2 0 3.04.84.85 2.2.85 3.04 0zM18 16l-8-6 6 8zm-4 2l-4-8 2 8h2zm4-4l-8-4 8 2v2z" />
  // 	</SVG>
  // );
  //
  // export const file = (
  // 	<SVG viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
  // 		<Path d="M9.17 6l2 2H20v10H4V6h5.17M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z" />
  // 	</SVG>
  // );
  //
  //
  // export const layout = (
  // <SVG
  // 	width="24"
  // 	height="24"
  // 	viewBox="0 0 24 24"
  // 	xmlns="http://www.w3.org/2000/svg"
  // >
  // 	<G>
  // 		<Path d="M20,13 C21.104,13 22,13.896 22,15 L22,20 C22,21.104 21.104,22 20,22 L4,22 C2.897,22 2,21.104 2,20 L2,15 C2,13.896 2.897,13 4,13 L20,13 M20,15 L16,15 L16,20 L20,20 L20,15 M14,15 L10,15 L10,20 L14,20 L14,15 M8,15 L4,15 L4,20 L8,20 L8,15"/>
  // 		<Path d="M4,11 C2.897,11 2,10.104 2,9 L2,4 C2,2.896 2.897,2 4,2 L20,2 C21.104,2 22,2.896 22,4 L22,9 C22,10.104 21.104,11 20,11 L4,11 z M20,4 L10,4 L10,9 L20,9.016 L20,4 z M8,4 L4,4 L4,9 L8,9 L8,4 z"/>
  // 	</G>
  // </SVG>
  // );

  // WordPress dependencies
  var _lodash$1 = lodash,
      includes = _lodash$1.includes,
      startCase = _lodash$1.startCase,
      isNil = _lodash$1.isNil; // const { __ } = wp.i18n;
  // Zukit dependencies

  var externalData = wp.zukit.utils.externalData; // Internal dependencies

  var pluginDefaults = externalData('zucontact_blocks_data', {
    prefix: 'zuc',
    action: 'submit',
    templates: {},
    types: {}
  }); // re-export all named imports ------------------------------------------------]
  var cssPrefix = pluginDefaults.prefix;
  function prefixIt(name) {
    var divider = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '-';
    if (isNil(name)) return cssPrefix;
    if (divider === '[]') return "".concat(cssPrefix, "[").concat(name, "]");
    return "".concat(cssPrefix).concat(divider).concat(name);
  }

  // WordPress dependencies
  var _lodash$2 = lodash,
      map = _lodash$2.map,
      transform$1 = _lodash$2.transform,
      get = _lodash$2.get,
      pick = _lodash$2.pick;
  var __ = wp.i18n.__; // form
  var _pluginDefaults$templ = pluginDefaults.templates,
      templates = _pluginDefaults$templ === void 0 ? {} : _pluginDefaults$templ; // Options & Values

  function params(name) {
    return pick(get(templates, name, {}), ['name', 'title']);
  }

  var layoutOptions = [{
    value: 'contact',
    label: __('Contact Layout', 'zu-contact'),
    layout: params('contact')
  }, {
    value: 'booking',
    label: __('Booking Layout', 'zu-contact'),
    layout: params('booking')
  }, {
    value: 'subscribe',
    label: __('Subscribe Layout', 'zu-contact'),
    layout: params('subscribe')
  }, {
    value: 'skip',
    label: __('Skip', 'zu-contact'),
    layout: params('default')
  }];
  var fieldBlock = 'zu/field';
  var allowedBlocks = [fieldBlock];
  // 'contact': [
  // 			[ 'zu/field', { id:'name', label:'Name', placeholder:'Your Name', required: true, type: 'text' } ],
  // 			[ 'zu/field', { id:'email', label:'Email', placeholder:'Your Email Address', required: false, type: 'text' } ],
  // 	],

  var layoutTemplates = transform$1(templates, function (values, layout, name) {
    values[name] = map(layout['fields'] || {}, function (attrs) {
      return [fieldBlock, _objectSpread2({}, attrs)];
    });
  });
  var assets = {
    layoutOptions: layoutOptions,
    svg: {
      form: form,
      //: { src: form, foreground: iconColor },
      contact: contact,
      booking: booking,
      subscribe: subscribe
    }
  };

  // WordPress dependencies
  var _lodash$3 = lodash,
      isNil$1 = _lodash$3.isNil; // const { compose } = wp.compose;
  // const { withSelect } = wp.data;
  // Zukit dependencies

  var _wp$zukit$utils$1 = wp.zukit.utils,
      mergeClasses = _wp$zukit$utils$1.mergeClasses,
      toBool = _wp$zukit$utils$1.toBool;
  var Loader = wp.zukit.components.Loader; // Internal dependencies
  var nonce = pluginDefaults.nonce;
  var formPrefix = 'components-zu-form';
  var okIcon = null;
  var errorIcon = null;
  var defaultMessage = null;

  var ZuForm = function ZuForm(_ref) {
    var className = _ref.className,
        titleEdit = _ref.titleEdit,
        loaderEdit = _ref.loaderEdit,
        postId = _ref.postId,
        postLink = _ref.postLink,
        name = _ref.name,
        title = _ref.title,
        noajax = _ref.noajax,
        loaderHTML = _ref.loaderHTML,
        children = _ref.children;
    var nameWithPrefix = prefixIt(name);
    var formTitle = titleEdit ? titleEdit : !title ? null : /*#__PURE__*/React.createElement("h2", {
      className: mergeClasses(prefixIt('subheading'), 'before_posting')
    }, title);
    var formNonce = isNil$1(nonce) ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("input", {
      type: "hidden",
      id: prefixIt('nonce', '_'),
      name: prefixIt('nonce', '_'),
      value: '__nonce__'
    }), /*#__PURE__*/React.createElement("input", {
      type: "hidden",
      name: "_wp_http_referer",
      value: postLink
    }));
    var formLoader = loaderEdit ? loaderEdit : /*#__PURE__*/React.createElement(Loader, {
      className: prefixIt('loader'),
      loaderHTML: loaderHTML
    });
    return /*#__PURE__*/React.createElement("div", {
      id: nameWithPrefix,
      className: mergeClasses(prefixIt('container'), name, formPrefix, {
        '__edit-mode': titleEdit
      }, className),
      "data-id": name,
      "data-noajax": toBool(noajax, true)
    }, formLoader, formTitle, /*#__PURE__*/React.createElement("div", {
      className: prefixIt('status'),
      style: {
        visibility: 'hidden'
      }
    }, /*#__PURE__*/React.createElement("span", {
      className: "icon-ok"
    }, okIcon), /*#__PURE__*/React.createElement("span", {
      className: "icon-error"
    }, errorIcon), /*#__PURE__*/React.createElement("span", {
      className: "message",
      "data-errmsg": defaultMessage
    })), /*#__PURE__*/React.createElement("div", {
      className: mergeClasses(prefixIt('form-container'), name)
    }, /*#__PURE__*/React.createElement("form", {
      className: mergeClasses(prefixIt('form'), name),
      id: prefixIt('form'),
      name: prefixIt(),
      role: "form",
      method: "post"
    }, formNonce, /*#__PURE__*/React.createElement("input", {
      type: "hidden",
      name: prefixIt('_fname', '[]'),
      value: name
    }), /*#__PURE__*/React.createElement("input", {
      type: "hidden",
      className: "__postLink",
      name: prefixIt('_post_link', '[]'),
      value: postLink
    }), /*#__PURE__*/React.createElement("input", {
      type: "hidden",
      className: "__postId",
      name: prefixIt('_post_id', '[]'),
      value: postId
    }), children)));
  };

  ZuForm.formPrefix = formPrefix;

  // WordPress dependencies
  var _lodash$4 = lodash,
      isNil$2 = _lodash$4.isNil;
  var RichText = wp.blockEditor.RichText;
  var _wp$element = wp.element,
      useCallback = _wp$element.useCallback,
      forwardRef = _wp$element.forwardRef; // Zukit dependencies

  var mergeClasses$1 = wp.zukit.utils.mergeClasses;

  var ZuPlainEdit = function ZuPlainEdit(_ref, ref) {
    var className = _ref.className,
        attrKey = _ref.attrKey,
        value = _ref.value,
        placeholder = _ref.placeholder,
        setAttributes = _ref.setAttributes,
        _ref$keepOnFocus = _ref.keepOnFocus,
        keepOnFocus = _ref$keepOnFocus === void 0 ? true : _ref$keepOnFocus;
    var setText = useCallback(function (val) {
      var doc = document.implementation.createHTMLDocument('');
      doc.body.innerHTML = val;
      setAttributes(isNil$2(attrKey) ? doc.body.innerText : _defineProperty({}, attrKey, doc.body.innerText));
    }, [attrKey, setAttributes]);
    return /*#__PURE__*/React.createElement(RichText, {
      ref: ref,
      tagName: "span",
      className: mergeClasses$1('__edit', className),
      allowedFormats: [],
      value: value,
      onChange: setText,
      placeholder: placeholder,
      keepPlaceholderOnFocus: keepOnFocus,
      __unstablePastePlainText: true
    });
  };

  var ZuPlainEdit$1 = forwardRef(ZuPlainEdit);

  // WordPress dependencies
  var __$1 = wp.i18n.__; // Internal dependencies
  var name = 'zu/form';
  /* translators: block name */

  var title = __$1('Zu Form', 'zu-contact');

  var attributes = {
    name: {
      type: 'string',
      // The documentation says:
      // "If no selector argument is specified, the source definition runs against the block’s root node"
      // https://developer.wordpress.org/block-editor/developers/block-api/block-attributes/
      // but this does not match the current Gutenberg implementation - block's root node is the first child
      // when parsing and therefore to get attributes from root node I use 'div:first-child'
      // (probably can be ':first-child' but not sure about selector)
      selector: 'div:first-child',
      source: 'attribute',
      attribute: 'data-id'
    },
    noajax: {
      type: 'boolean',
      selector: 'div:first-child',
      source: 'attribute',
      attribute: 'data-noajax'
    },
    title: {
      type: 'string',
      selector: 'h2',
      source: 'text'
    },
    postId: {
      type: 'string',
      selector: 'input.__postId',
      source: 'attribute',
      attribute: 'value'
    },
    postLink: {
      type: 'string',
      selector: 'input.__postLink',
      source: 'attribute',
      attribute: 'value'
    },
    loader: {
      type: 'string',
      default: 'none',
      selector: '.zu-loader svg',
      source: 'attribute',
      attribute: 'data-id'
    },
    loaderHTML: {
      type: 'string',
      default: '',
      selector: '.zu-loader',
      source: 'html'
    }
  };
  var metadata = {
    name: name,
    title: title,

    /* translators: block description */
    description: __$1(' Simple but smart and modern Ajax contact form.', 'zu-contact'),
    category: 'layout',
    keywords: [
    /* translators: block keyword */
    __$1('contact', 'zu-contact'),
    /* translators: block keyword */
    __$1('feedback', 'zu-contact'),
    /* translators: block keyword */
    __$1('form', 'zu-contact')],
    icon: {
      src: form,
      foreground: iconColor
    },
    supports: {
      reusable: false,
      html: false,
      align: false
    },
    attributes: attributes
  };

  // WordPress dependencies
  var _lodash$5 = lodash,
      get$1 = _lodash$5.get,
      find = _lodash$5.find;
  var __$2 = wp.i18n.__;
  var Placeholder = wp.components.Placeholder;
  var BlockIcon = wp.blockEditor.BlockIcon;
  var useCallback$1 = wp.element.useCallback; // Zukit dependencies

  var SelectItemControl = wp.zukit.components.SelectItemControl; // Internal dependencies

  var FormLayout = function FormLayout(_ref) {
    var classPrefix = _ref.classPrefix,
        layout = _ref.layout,
        setLayout = _ref.setLayout;
    var selectLayout = useCallback$1(function (name) {
      setLayout(get$1(find(assets.layoutOptions, {
        value: name
      }), 'layout', {}));
    }, [setLayout]);

    var renderItem = function renderItem(value, label) {
      return /*#__PURE__*/React.createElement("span", {
        className: "__wrapper"
      }, value === 'skip' ? /*#__PURE__*/React.createElement("span", {
        className: "__skip"
      }, label) : assets.svg[value]);
    };

    return /*#__PURE__*/React.createElement(Placeholder, {
      className: "".concat(classPrefix, "__placeholder"),
      icon: /*#__PURE__*/React.createElement(BlockIcon, {
        icon: assets.svg['form'],
        showColors: true
      }) // we need add '  ' to separate title from SVG (css does not work!)
      ,
      label: ' ' + title,
      instructions: __$2('Select a form layout to start with.', 'zu-contact')
    }, /*#__PURE__*/React.createElement(SelectItemControl, {
      isSmall: true,
      withTooltip: true,
      className: "form-layout",
      columns: assets.layoutOptions.length,
      options: assets.layoutOptions,
      selectedItem: layout,
      onClick: selectLayout,
      transformValue: renderItem
    }));
  }; // FormLayout.Preview = LayoutPreview;

  // WordPress dependencies
  var _lodash$6 = lodash,
      isNil$3 = _lodash$6.isNil,
      trim = _lodash$6.trim;
  var __$3 = wp.i18n.__;
  var compose = wp.compose.compose;
  var _wp$components$1 = wp.components,
      PanelBody = _wp$components$1.PanelBody,
      TextControl = _wp$components$1.TextControl,
      ToggleControl = _wp$components$1.ToggleControl;
  var _wp$blockEditor = wp.blockEditor,
      InnerBlocks = _wp$blockEditor.InnerBlocks,
      InspectorControls = _wp$blockEditor.InspectorControls,
      InspectorAdvancedControls = _wp$blockEditor.InspectorAdvancedControls;
  var withSelect = wp.data.withSelect;
  var _wp$element$1 = wp.element,
      useCallback$2 = _wp$element$1.useCallback,
      useEffect = _wp$element$1.useEffect; // Zukit dependencies

  var _wp$zukit$components = wp.zukit.components,
      LoaderControl = _wp$zukit$components.LoaderControl,
      Loader$1 = _wp$zukit$components.Loader;
  var useLoaders = wp.zukit.data.useLoaders; // Internal dependencies

  var ZuFormEdit = function ZuFormEdit(_ref) {
    var clientId = _ref.clientId,
        className = _ref.className,
        currentPostId = _ref.currentPostId,
        editedPostSlug = _ref.editedPostSlug,
        attributes = _ref.attributes,
        setAttributes = _ref.setAttributes;
    var name = attributes.name,
        title = attributes.title,
        noajax = attributes.noajax,
        postId = attributes.postId,
        postLink = attributes.postLink,
        loader = attributes.loader;
    useEffect(function () {
      if (isNil$3(postId) || isNil$3(postLink)) {
        var link = isNil$3(editedPostSlug) ? '' : "/".concat(trim(editedPostSlug, '/'), "/");
        setAttributes({
          postId: currentPostId,
          postLink: link
        });
      } // eslint-disable-next-line react-hooks/exhaustive-deps

    }, []); // Loader -----------------------------------------------------------------]
    // get all possible options for 'loaders'

    var loaders = useLoaders();
    var loaderEdit = /*#__PURE__*/React.createElement(Loader$1.WithOptions, {
      className: prefixIt('loader'),
      id: loader
    }); // Layouts ----------------------------------------------------------------]

    var setLayout = useCallback$2(function (layout) {
      setAttributes({
        name: layout.name,
        title: layout.title
      });
    }, [setAttributes]); // if the name is not defined - display the layout selection

    if (!name) {
      return /*#__PURE__*/React.createElement(FormLayout, {
        classPrefix: ZuForm.formPrefix,
        layout: name,
        setLayout: setLayout
      });
    } // Title ------------------------------------------------------------------]


    var titleEdit = /*#__PURE__*/React.createElement("h2", {
      className: prefixIt('subheading')
    }, /*#__PURE__*/React.createElement(ZuPlainEdit$1, {
      value: title,
      attrKey: 'title',
      placeholder: __$3('Add form title...', 'zu-contact'),
      setAttributes: setAttributes
    })); // console.log(name, layoutTemplates[name]);
    // <PanelBody title={ __('Plugin options', 'zu-contact') }>
    // 	<PluginOptionsEdit/>
    // </PanelBody>

    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InspectorControls, null, /*#__PURE__*/React.createElement(PanelBody, {
      title: __$3('Form Settings', 'zu-contact')
    }, /*#__PURE__*/React.createElement(ToggleControl, {
      label: __$3('Submit via Ajax', 'zu-contact'),
      checked: !noajax,
      onChange: function onChange() {
        return setAttributes({
          noajax: !noajax
        });
      }
    })), /*#__PURE__*/React.createElement(PanelBody, {
      title: __$3('Form Loader', 'zu-contact'),
      initialOpen: false
    }, /*#__PURE__*/React.createElement(LoaderControl, {
      clientId: clientId,
      editClassName: "__reveal-loader",
      shape: loader,
      loaders: loaders,
      setAttributes: setAttributes
    }))), /*#__PURE__*/React.createElement(InspectorAdvancedControls, null, /*#__PURE__*/React.createElement(TextControl, {
      label: __$3('Form Name', 'zu-contact'),
      help: __$3('Usually you don\'t need to change it', 'zu-contact'),
      value: name,
      onChange: function onChange(val) {
        return setAttributes({
          name: val
        });
      }
    })), /*#__PURE__*/React.createElement(ZuForm, {
      className: className,
      name: name,
      title: title,
      noajax: noajax,
      postId: postId,
      postLink: postLink,
      titleEdit: titleEdit,
      loaderEdit: loaderEdit
    }, /*#__PURE__*/React.createElement(InnerBlocks, {
      allowedBlocks: allowedBlocks,
      template: layoutTemplates[name],
      templateLock: false,
      templateInsertUpdatesSelection: false,
      renderAppender: function renderAppender() {
        return null;
      },
      __experimentalCaptureToolbars: true
    })));
  };

  var edit = compose([withSelect(function (select) {
    var _select = select('core/editor'),
        getCurrentPostId = _select.getCurrentPostId,
        getEditedPostSlug = _select.getEditedPostSlug;

    return {
      currentPostId: getCurrentPostId(),
      editedPostSlug: getEditedPostSlug()
    };
  })])(ZuFormEdit);

  // WordPress dependencies
  var InnerBlocks$1 = wp.blockEditor.InnerBlocks; // Internal dependencies

  var save = function save(_ref) {
    var className = _ref.className,
        attributes = _ref.attributes;
    var postId = attributes.postId,
        postLink = attributes.postLink,
        name = attributes.name,
        title = attributes.title,
        noajax = attributes.noajax,
        loaderHTML = attributes.loaderHTML;
    return /*#__PURE__*/React.createElement(ZuForm, {
      className: className,
      name: name,
      title: title,
      noajax: noajax,
      postId: postId,
      postLink: postLink,
      loaderHTML: loaderHTML
    }, /*#__PURE__*/React.createElement(InnerBlocks$1.Content, null));
  };

  var transforms = {};

  var settings = _objectSpread2(_objectSpread2({}, metadata), {}, {
    transforms: transforms,
    edit: edit,
    save: save
  });

  var form$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    settings: settings,
    name: name,
    title: title
  });

  // WordPress dependencies
  var __$4 = wp.i18n.__; // Internal dependencies
  var name$1 = 'zu/field';
  /* translators: block name */

  var title$1 = __$4('Zu Field', 'zu-contact');

  var attributes$1 = {
    id: {
      type: 'string'
    },
    label: {
      type: 'string'
    },
    type: {
      type: 'string'
    },
    required: {
      type: 'boolean'
    },
    value: {
      type: 'string'
    },
    placeholder: {
      type: 'string'
    },
    rows: {
      type: 'number',
      default: 10
    }
  };
  var metadata$1 = {
    name: name$1,
    title: title$1,

    /* translators: block description */
    description: __$4('A text box for longer responses.', 'zu-contact'),
    category: 'layout',
    keywords: [
    /* translators: block keyword */
    __$4('field', 'zu-contact'),
    /* translators: block keyword */
    __$4('feedback', 'zu-contact'),
    /* translators: block keyword */
    __$4('form', 'zu-contact')],
    icon: {
      src: field,
      foreground: iconColor
    },
    parent: ['zu/form'],
    supports: {
      align: false,
      reusable: false,
      html: false
    },
    attributes: attributes$1
  };

  // WordPress dependencies
  var _lodash$7 = lodash,
      isArray = _lodash$7.isArray,
      isNil$4 = _lodash$7.isNil,
      get$2 = _lodash$7.get,
      map$1 = _lodash$7.map,
      transform$2 = _lodash$7.transform,
      includes$1 = _lodash$7.includes,
      omit = _lodash$7.omit,
      omitBy = _lodash$7.omitBy;
  var __$5 = wp.i18n.__; // 'text'+
  var _pluginDefaults$types = pluginDefaults.types,
      fullTypeDefaults = _pluginDefaults$types === void 0 ? {} : _pluginDefaults$types; // Options & Values
  // function params(name) { return pick(get(templates, name, {}), ['name', 'title']); }
  // text
  // textarea
  // mail
  // tel
  // url
  // checkbox
  // number
  // submit

  var typeOptions = [{
    value: 'text',
    label: __$5('Text Field', 'zu-contact')
  }, {
    value: 'textarea',
    label: __$5('Message Field', 'zu-contact')
  }, {
    value: 'email',
    label: __$5('E-mail Field', 'zu-contact')
  }, {
    value: 'tel',
    label: __$5('Phone Field', 'zu-contact')
  }, {
    value: 'url',
    label: __$5('URL Field', 'zu-contact')
  }, {
    value: 'checkbox',
    label: __$5('Checkbox Field', 'zu-contact')
  }, {
    value: 'number',
    label: __$5('Number Field', 'zu-contact')
  }, {
    value: 'submit',
    label: __$5('Submit Button Field', 'zu-contact')
  }];
  var availableTypes = map$1(typeOptions, function (t) {
    return t.value;
  });
  var typeDefaults = transform$2(fullTypeDefaults, function (values, attr, name) {
    if (includes$1(availableTypes, name)) values[name] = omit(attr, 'required');
  });
  var requiredDefaults = omitBy(transform$2(fullTypeDefaults, function (values, attr, name) {
    values[name] = (isArray(attr.required) ? get$2(attr, ['required', '0']) : attr.required) || null;
  }), isNil$4);
  // 'contact': [
  // 			[ 'zu/field', { id:'name', label:'Name', placeholder:'Your Name', required: true, type: 'text' } ],
  // 			[ 'zu/field', { id:'email', label:'Email', placeholder:'Your Email Address', required: false, type: 'text' } ],
  // 	],
  // export const FieldTemplates = transform(templates, (values, Field, name)  => {
  // 	values[name] = map(Field['fields'] || {}, attrs => [fieldBlock, { ...attrs }]);
  // });

  var assets$1 = {
    typeOptions: typeOptions,
    svg: types
  };

  // WordPress dependencies
  // const { get, set, has, includes, map } = lodash;
  var __$6 = wp.i18n.__;
  var compose$1 = wp.compose.compose;
  var _wp$components$2 = wp.components,
      Button = _wp$components$2.Button,
      Icon = _wp$components$2.Icon,
      Modal = _wp$components$2.Modal;
  var _wp$element$2 = wp.element,
      useState = _wp$element$2.useState,
      useCallback$3 = _wp$element$2.useCallback,
      useRef = _wp$element$2.useRef;
  var withSelect$1 = wp.data.withSelect; // Internal dependencies

  var ZuSubmitEdit = function ZuSubmitEdit(_ref) {
    var type = _ref.type,
        label = _ref.label,
        setAttributes = _ref.setAttributes,
        previewLink = _ref.previewLink,
        permalink = _ref.permalink,
        permalinkLabel = _ref.permalinkLabel;

    var _useState = useState(false),
        _useState2 = _slicedToArray(_useState, 2),
        isOpen = _useState2[0],
        setOpen = _useState2[1];

    var spacebarRef = useRef(null);
    var closeModal = useCallback$3(function () {
      return setOpen(false);
    }, []);
    var submitKeyDown = useCallback$3(function (ev) {
      var node = String(ev.target.nodeName || ev.target.tagName).toLowerCase();

      if (node === 'span') {
        spacebarRef.current = event.keyCode === 32;
      }
    }, []);
    var submitClick = useCallback$3(function (ev) {
      var node = String(ev.target.nodeName || ev.target.tagName).toLowerCase();
      if (node === 'span') ev.preventDefault();else {
        if (spacebarRef.current !== true) setOpen(true);
        ev.preventDefault();
      }
      spacebarRef.current = false;
    }, []);

    var message = __$6('Sorry, but the form submission doesn\'t work in Edit mode.\n' + 'To test the form go to Preview mode.', 'zu-contact');

    return type !== 'submit' ? null : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("button", {
      className: "__edit-submit",
      onClick: submitClick,
      onKeyDown: submitKeyDown
    }, /*#__PURE__*/React.createElement(ZuPlainEdit$1, {
      value: label,
      attrKey: 'label',
      placeholder: __$6('Add button label...', 'zu-contact'),
      setAttributes: setAttributes
    })), isOpen && /*#__PURE__*/React.createElement(Modal, {
      className: "zukit-modal",
      title: __$6('Warning', 'zu-contact'),
      closeLabel: __$6('Close'),
      onRequestClose: closeModal
    }, /*#__PURE__*/React.createElement("div", {
      className: "__content-wrapper"
    }, /*#__PURE__*/React.createElement(Icon, {
      className: "__gold __icon",
      icon: required
    }), /*#__PURE__*/React.createElement("div", null, message.split('\n').map(function (line, key) {
      return /*#__PURE__*/React.createElement("p", {
        key: key
      }, line);
    }))), /*#__PURE__*/React.createElement("div", {
      className: "__button-wrapper"
    }, /*#__PURE__*/React.createElement(Button, {
      isTertiary: true,
      icon: "external",
      href: permalink,
      target: "zu-form-view",
      rel: "external noreferrer noopener"
    }, permalinkLabel), /*#__PURE__*/React.createElement(Button, {
      isSecondary: true,
      href: previewLink,
      target: "zu-form-preview",
      rel: "external noreferrer noopener"
    }, __$6('Preview')), /*#__PURE__*/React.createElement(Button, {
      isPrimary: true,
      onClick: closeModal
    }, __$6('Close')))));
  };

  var ZuSubmitEdit$1 = compose$1([withSelect$1(function (select) {
    var _select = select('core/editor'),
        getEditedPostPreviewLink = _select.getEditedPostPreviewLink,
        getPermalink = _select.getPermalink,
        getCurrentPostType = _select.getCurrentPostType;

    var label = [getCurrentPostType() === 'page' ? __$6('View Page') : __$6('View Post'), __$6('in new tab')].join(' ');
    return {
      previewLink: getEditedPostPreviewLink(),
      permalink: getPermalink(),
      permalinkLabel: label
    };
  })])(ZuSubmitEdit);

  // WordPress dependencies
  var _lodash$8 = lodash,
      isFunction = _lodash$8.isFunction;
  var __$7 = wp.i18n.__;
  var _wp$components$3 = wp.components,
      ToolbarGroup = _wp$components$3.ToolbarGroup,
      ToolbarButton = _wp$components$3.ToolbarButton,
      Disabled = _wp$components$3.Disabled;
  var BlockControls = wp.blockEditor.BlockControls;
  var useCallback$4 = wp.element.useCallback; // Zukit dependencies

  var ConditionalWrap = wp.zukit.components.ConditionalWrap; // Internal dependencies

  var ZuFieldBlockControls = function ZuFieldBlockControls(_ref) {
    var type = _ref.type,
        controls = _ref.controls,
        placeholder$1 = _ref.placeholder,
        isEditingPlaceholder = _ref.isEditingPlaceholder,
        onEditPlaceholder = _ref.onEditPlaceholder,
        onSubmitPlaceholder = _ref.onSubmitPlaceholder,
        required$1 = _ref.required,
        isEditingRequired = _ref.isEditingRequired,
        onEditRequired = _ref.onEditRequired,
        onSubmitRequired = _ref.onSubmitRequired,
        remove$1 = _ref.remove,
        insert = _ref.insert;
    // Even if the data for blocks (such as type) is 'undefined' - we still
    // display these blocks, to avoid flickering when rendering and updating blocks
    var isDisabled = type === undefined || type === 'submit';
    var isPlaceholderDisabled = type === 'checkbox';
    var isRequiredDisabled = required$1 !== true;
    var placeholderLabel = isEditingPlaceholder ? __$7('Submit editing', 'zu-contact') : placeholder$1 ? __$7('Edit placeholder', 'zu-contact') : __$7('Insert placeholder', 'zu-contact');
    var onPlaceholderClick = useCallback$4(function () {
      return isEditingPlaceholder ? onSubmitPlaceholder() : onEditPlaceholder();
    }, [isEditingPlaceholder, onEditPlaceholder, onSubmitPlaceholder]);
    var onRequiredClick = useCallback$4(function () {
      return isEditingRequired ? onSubmitRequired() : onEditRequired();
    }, [isEditingRequired, onEditRequired, onSubmitRequired]);
    var requiredLabel = isEditingRequired ? __$7('Submit editing', 'zu-contact') : placeholder$1 ? __$7('Edit error message for the required field', 'zu-contact') : __$7('Insert error message for the required field', 'zu-contact');
    return /*#__PURE__*/React.createElement(BlockControls, null, controls && /*#__PURE__*/React.createElement(ConditionalWrap, {
      wrap: Disabled,
      condition: isDisabled
    }, controls), /*#__PURE__*/React.createElement(ToolbarGroup, null, /*#__PURE__*/React.createElement(ToolbarButton, {
      icon: isEditingPlaceholder ? submit : placeholder,
      className: "components-toolbar__control",
      label: placeholderLabel // aria-expanded={ false }
      ,
      disabled: isDisabled || isPlaceholderDisabled,
      onClick: onPlaceholderClick
    }), /*#__PURE__*/React.createElement(ToolbarButton, {
      icon: isEditingRequired ? submit : required,
      className: "components-toolbar__control",
      label: requiredLabel,
      disabled: isDisabled || isRequiredDisabled,
      onClick: onRequiredClick
    })), /*#__PURE__*/React.createElement(ToolbarGroup, null, /*#__PURE__*/React.createElement(ToolbarButton, {
      icon: append,
      className: "components-toolbar__control",
      label: __$7('Append field', 'zu-contact'),
      disabled: !isFunction(insert),
      onClick: insert
    }), /*#__PURE__*/React.createElement(ToolbarButton, {
      icon: remove,
      className: "components-toolbar__control",
      label: __$7('Remove field', 'zu-contact'),
      disabled: !isFunction(remove$1),
      onClick: remove$1
    })));
  };

  // WordPress dependencies
  // const { isArray, get } = lodash;
  var forwardRef$1 = wp.element.forwardRef; // Zukit dependencies

  var mergeClasses$2 = wp.zukit.utils.mergeClasses; // Internal dependencies

  var ZuField = function ZuField(_ref, ref) {
    var labelEdit = _ref.labelEdit,
        validationEdit = _ref.validationEdit,
        submitEdit = _ref.submitEdit,
        placeholderEdit = _ref.placeholderEdit,
        temporaryValue = _ref.temporaryValue,
        onChange = _ref.onChange,
        className = _ref.className,
        id = _ref.id,
        type = _ref.type,
        required = _ref.required,
        value = _ref.value,
        placeholder = _ref.placeholder,
        label = _ref.label,
        _ref$rows = _ref.rows,
        rows = _ref$rows === void 0 ? 10 : _ref$rows;
    var idWithPrefix = prefixIt(id);
    var inputValue = (onChange ? temporaryValue : value) || (type === 'checkbox' ? false : '');
    var placeholderValue = type === 'checkbox' || placeholderEdit ? null : placeholder;
    var control = type === 'textarea' ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("textarea", {
      ref: ref,
      className: "form-control",
      id: idWithPrefix,
      name: prefixIt(id, '[]'),
      rows: rows,
      placeholder: placeholderValue,
      onChange: onChange,
      value: inputValue
    }), placeholderEdit) : type === 'submit' ? submitEdit ? submitEdit : /*#__PURE__*/React.createElement("input", {
      className: "button button-submit",
      type: type,
      id: idWithPrefix,
      value: label || ''
    }) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement("input", {
      ref: ref,
      className: "form-control",
      type: type,
      id: idWithPrefix,
      name: idWithPrefix,
      value: type === 'checkbox' ? "1" : inputValue,
      checked: type === 'checkbox' ? inputValue : null,
      placeholder: placeholderValue,
      onChange: onChange
    }), placeholderEdit);
    var controlLabel = labelEdit ? labelEdit : type === 'submit' ? null : /*#__PURE__*/React.createElement("label", {
      htmlFor: idWithPrefix
    }, label, required ? /*#__PURE__*/React.createElement("span", {
      className: "required"
    }, "*") : null);
    var controlValidation = validationEdit ? validationEdit : type === 'submit' ? null : /*#__PURE__*/React.createElement("span", {
      htmlFor: idWithPrefix,
      className: "__validation"
    });
    return /*#__PURE__*/React.createElement("div", {
      className: mergeClasses$2(prefixIt('control'), {
        __submit: type === 'submit',
        __success: true,
        __error: validationEdit
      }, className)
    }, type === 'checkbox' ? null : controlLabel, /*#__PURE__*/React.createElement("div", {
      className: mergeClasses$2(prefixIt('input'), type)
    }, control, type === 'checkbox' ? controlLabel : null, controlValidation));
  };

  var ZuField$1 = forwardRef$1(ZuField);

  // WordPress dependencies
  var _lodash$9 = lodash,
      isNil$5 = _lodash$9.isNil,
      get$3 = _lodash$9.get,
      set = _lodash$9.set,
      has$1 = _lodash$9.has,
      includes$2 = _lodash$9.includes,
      map$2 = _lodash$9.map,
      indexOf = _lodash$9.indexOf;
  var __$8 = wp.i18n.__;
  var compose$2 = wp.compose.compose;
  var _wp$components$4 = wp.components,
      PanelBody$1 = _wp$components$4.PanelBody,
      ToggleControl$1 = _wp$components$4.ToggleControl,
      TextControl$1 = _wp$components$4.TextControl; //Button, SelectControl,

  var createBlock = wp.blocks.createBlock;
  var _wp$blockEditor$1 = wp.blockEditor,
      InspectorControls$1 = _wp$blockEditor$1.InspectorControls,
      InspectorAdvancedControls$1 = _wp$blockEditor$1.InspectorAdvancedControls;
  var _wp$data = wp.data,
      withSelect$2 = _wp$data.withSelect,
      withDispatch = _wp$data.withDispatch;
  var _wp$element$3 = wp.element,
      useState$1 = _wp$element$3.useState,
      useCallback$5 = _wp$element$3.useCallback,
      useRef$1 = _wp$element$3.useRef,
      useEffect$1 = _wp$element$3.useEffect; // Zukit dependencies

  var SelectItemControl$1 = wp.zukit.components.SelectItemControl; // Internal dependencies
  var fieldPrefix = 'components-zu-field__settings';

  var ZuFieldEdit = function ZuFieldEdit(_ref) {
    var attributes = _ref.attributes,
        className = _ref.className,
        setAttributes = _ref.setAttributes,
        uniqueId = _ref.uniqueId,
        remove = _ref.remove,
        insert = _ref.insert;
    var id = attributes.id,
        label = attributes.label,
        type = attributes.type,
        required = attributes.required,
        value = attributes.value,
        placeholder = attributes.placeholder,
        rows = attributes.rows;

    var _useState = useState$1(type === 'checkbox' ? false : ''),
        _useState2 = _slicedToArray(_useState, 2),
        temporaryValue = _useState2[0],
        setTemporaryValue = _useState2[1];

    var attrRef = useRef$1(null);
    var requiredRef = useRef$1(null);
    var inputRef = useRef$1();
    var modeRef = useRef$1({
      required: false,
      invalid: false,
      placeholder: false
    }); // create 'text' field as default if no attributes found

    useEffect$1(function () {
      if (isNil$5(id)) {
        var newAttrs = typeDefaults[type || 'text']; // avoid duplicate field id

        setAttributes(_objectSpread2(_objectSpread2({}, newAttrs), {}, {
          id: uniqueId(newAttrs.id)
        }));
      } // eslint-disable-next-line react-hooks/exhaustive-deps

    }, []); // Label helpers ----------------------------------------------------------]

    var labelEdit = type === 'submit' ? null : /*#__PURE__*/React.createElement("label", null, /*#__PURE__*/React.createElement(ZuPlainEdit$1, {
      value: label,
      attrKey: 'label',
      placeholder: __$8('Add field label...', 'zu-contact'),
      setAttributes: setAttributes
    }), required && /*#__PURE__*/React.createElement("span", {
      className: "required"
    }, "*")); // Required helpers -------------------------------------------------------]

    var _useState3 = useState$1(false),
        _useState4 = _slicedToArray(_useState3, 2),
        isEditingRequired = _useState4[0],
        setIsEditingRequired = _useState4[1];

    var _useState5 = useState$1(requiredDefaults[type] || null),
        _useState6 = _slicedToArray(_useState5, 2),
        temporaryRequired = _useState6[0],
        setTemporaryRequired = _useState6[1];

    var requiredEditRef = useRef$1();
    var validationEdit = !isEditingRequired || type === 'submit' ? null : /*#__PURE__*/React.createElement(ZuPlainEdit$1, {
      ref: requiredEditRef,
      className: "__validation",
      value: temporaryRequired,
      placeholder: __$8('Add field error message...', 'zu-contact'),
      setAttributes: setTemporaryRequired
    });
    var onEditRequired = useCallback$5(function () {
      setIsEditingRequired(true);
      modeRef.current.required = true;
    }, []);
    useEffect$1(function () {
      if (isEditingRequired) {
        requiredEditRef.current.focus();
      } else if (modeRef.current.required === true) {
        inputRef.current.focus();
        modeRef.current.required = false;
      }
    }, [isEditingRequired]);
    var onSubmitRequired = useCallback$5(function () {
      setIsEditingRequired(false);
    }, []); // Placeholder helpers ----------------------------------------------------]

    var _useState7 = useState$1(false),
        _useState8 = _slicedToArray(_useState7, 2),
        isEditingPlaceholder = _useState8[0],
        setIsEditingPlaceholder = _useState8[1];

    var placeholderEditRef = useRef$1();
    var placeholderEdit = !isEditingPlaceholder ? null : /*#__PURE__*/React.createElement("div", {
      className: "__edit-placeholder"
    }, /*#__PURE__*/React.createElement(ZuPlainEdit$1, {
      ref: placeholderEditRef,
      value: placeholder,
      attrKey: 'placeholder',
      placeholder: __$8('Add field placeholder...', 'zu-contact'),
      setAttributes: setAttributes
    }));
    var onEditPlaceholder = useCallback$5(function () {
      setIsEditingPlaceholder(true);
      modeRef.current.placeholder = true;
    }, []);
    useEffect$1(function () {
      if (isEditingPlaceholder) {
        placeholderEditRef.current.focus();
      } else if (modeRef.current.placeholder === true) {
        inputRef.current.focus();
        modeRef.current.placeholder = false;
      }
    }, [isEditingPlaceholder]); // Other helpers ----------------------------------------------------------]

    var submitEdit = /*#__PURE__*/React.createElement(ZuSubmitEdit$1, {
      type: type,
      label: label,
      setAttributes: setAttributes
    });

    var onChangeValue = function onChangeValue(event) {
      return setTemporaryValue(event.target[type === 'checkbox' ? 'checked' : 'value']);
    };

    var selectType = useCallback$5(function (selected) {
      var type = attributes.type;
      if (selected === type) return; // keep current attributes, maybe they will be used later

      attrRef.current = set(attrRef.current || {}, type, attributes); // keep current error message for required, maybe it will be used later

      requiredRef.current = set(requiredRef.current || {}, type, temporaryRequired);
      var newAttrs = has$1(attrRef.current, selected) ? attrRef.current[selected] : typeDefaults[selected];
      var newRequired = has$1(requiredRef.current, selected) ? requiredRef.current[selected] : requiredDefaults[selected]; // avoid duplicate field id

      setAttributes(_objectSpread2(_objectSpread2({}, newAttrs), {}, {
        id: uniqueId(newAttrs.id)
      }));
      setTemporaryRequired(newRequired);
    }, [attributes, setAttributes, temporaryRequired, uniqueId]);
    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InspectorControls$1, null, /*#__PURE__*/React.createElement(PanelBody$1, {
      className: fieldPrefix,
      title: __$8('Field Settings', 'zu-contact')
    }, /*#__PURE__*/React.createElement(SelectItemControl$1, {
      isSmall: true,
      withTooltip: true,
      label: __$8('Field Type', 'zu-contact'),
      className: "__field-type",
      columns: 3,
      options: assets$1.typeOptions,
      selectedItem: type,
      onClick: selectType,
      transformValue: function transformValue(value) {
        return /*#__PURE__*/React.createElement("span", {
          className: "__wrapper"
        }, assets$1.svg[value]);
      },
      recap: {
        label: __$8('Current Field Type', 'zu-contact'),
        style: {
          color: iconColor
        }
      }
    }), type !== 'submit' && /*#__PURE__*/React.createElement(ToggleControl$1, {
      label: __$8('This is a required field.', 'zu-contact'),
      checked: !!required,
      onChange: function onChange() {
        return setAttributes({
          required: !required
        });
      }
    }))), /*#__PURE__*/React.createElement(InspectorAdvancedControls$1, null, /*#__PURE__*/React.createElement(TextControl$1, {
      label: __$8('Field Id', 'zu-contact'),
      help: __$8('Usually you don\'t need to change it', 'zu-contact'),
      value: id,
      onChange: function onChange(val) {
        return setAttributes({
          id: uniqueId(val)
        });
      }
    })), /*#__PURE__*/React.createElement(ZuFieldBlockControls, _extends({
      isEditingPlaceholder: isEditingPlaceholder,
      onEditPlaceholder: onEditPlaceholder //() => setIsEditingPlaceholder(true) }
      ,
      onSubmitPlaceholder: function onSubmitPlaceholder() {
        return setIsEditingPlaceholder(false);
      },
      isEditingRequired: isEditingRequired,
      onEditRequired: onEditRequired //() => setIsEditingRequired(true) }
      ,
      onSubmitRequired: onSubmitRequired
    }, {
      id: id,
      type: type,
      required: required,
      placeholder: placeholder,
      remove: remove,
      insert: insert
    })), /*#__PURE__*/React.createElement(ZuField$1, _extends({
      ref: inputRef,
      labelEdit: labelEdit,
      validationEdit: validationEdit,
      submitEdit: submitEdit,
      placeholderEdit: placeholderEdit,
      temporaryValue: temporaryValue,
      onChange: onChangeValue
    }, {
      className: className,
      id: id,
      type: type,
      required: required,
      value: value,
      placeholder: placeholder,
      label: label,
      rows: rows
    })));
  }; // export default ZuFieldEdit;


  var edit$1 = compose$2([withSelect$2(function (select, _ref2) {
    var clientId = _ref2.clientId;

    var _select = select('core/block-editor'),
        getBlockOrder = _select.getBlockOrder,
        getBlockRootClientId = _select.getBlockRootClientId,
        getBlockAttributes = _select.getBlockAttributes; // const { getBlockTypes } = select('core/blocks');
    // const block = getBlock(clientId);


    var parentId = getBlockRootClientId(clientId);
    var fieldIds = getBlockOrder(parentId);
    var availableFieldIds = map$2(fieldIds, function (id) {
      return get$3(getBlockAttributes(id), 'id', null);
    });

    var uniqueId = function uniqueId(id) {
      if (includes$2(availableFieldIds, id)) {
        var index = 0;
        var idBody = String(id).replace(/-\d+$/, '').replace(/\d+$/, '') || 'id';

        while (++index > 0) {
          var testId = "".concat(idBody, "-").concat(index);
          if (!includes$2(availableFieldIds, testId)) return testId;
        }
      }

      return id;
    };

    return {
      uniqueId: uniqueId,
      parentId: parentId,
      insertIndex: indexOf(fieldIds, clientId) + 1
    };
  }), withDispatch(function (dispatch, _ref3) {
    var clientId = _ref3.clientId,
        parentId = _ref3.parentId,
        insertIndex = _ref3.insertIndex;

    var _dispatch = dispatch('core/block-editor'),
        removeBlock = _dispatch.removeBlock,
        insertBlock = _dispatch.insertBlock;

    return {
      remove: function remove() {
        return removeBlock(clientId, false);
      },
      insert: function insert() {
        return insertBlock(createBlock(name$1, {
          type: 'text'
        }), insertIndex, parentId, false);
      }
    };
  })])(ZuFieldEdit);

  // WordPress dependencies

  var save$1 = function save(_ref) {
    var className = _ref.className,
        attributes = _ref.attributes;
    var id = attributes.id,
        label = attributes.label,
        type = attributes.type,
        required = attributes.required,
        value = attributes.value,
        placeholder = attributes.placeholder,
        rows = attributes.rows;
    return /*#__PURE__*/React.createElement(ZuField$1, {
      className: className,
      id: id,
      type: type,
      required: required,
      value: value,
      placeholder: placeholder,
      label: label,
      rows: rows
    });
  };

  var transforms$1 = {};

  var settings$1 = _objectSpread2(_objectSpread2({}, metadata$1), {}, {
    transforms: transforms$1,
    edit: edit$1,
    save: save$1
  });

  var field$1 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    settings: settings$1,
    name: name$1,
    title: title$1
  });

  // WordPress dependencies
  var registerBlockType = wp.blocks.registerBlockType; // Import debug object and make it available from global scope
  // import zubug from './shared/debug.js';
  // window.Zubug = zubug;
  // Zukit dependencies

  var _wp$zukit$utils$2 = wp.zukit.utils,
      registerCollection = _wp$zukit$utils$2.registerCollection,
      registerCategory = _wp$zukit$utils$2.registerCategory,
      brandAssets = _wp$zukit$utils$2.brandAssets; // Internal dependencies
  // import { registerPlugins } from './zu-plugins.js';
  // import { editorInit } from './zu-admin.js';
  // Register ZU blocks collection or category

  var supportsCollections = registerCollection();
  if (!supportsCollections) registerCategory(); //  Register Blocks
  function registerBlocks() {
    [form$1, field$1].forEach(function (block) {
      if (!block) return;
      var name = block.name,
          settings = block.settings;
      if (!supportsCollections) settings.category = brandAssets.slug;
      registerBlockType(name, settings);
    });
  }
  registerBlocks();

  exports.registerBlocks = registerBlocks;

  Object.defineProperty(exports, '__esModule', { value: true });

  return exports;

}({}));
//# sourceMappingURL=zucontact-blocks.min.js.map
